{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rivanildojr/Documentos/fullstack-lab-2020/pages/create-status.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback } from \"react\";\nimport axios from \"axios\";\n\nvar CreateStatus = function CreateStatus() {\n  var _useState = useState({\n    status: \"bem\",\n    coords: {\n      lat: null,\n      \"long\": null\n    }\n  }),\n      dados = _useState[0],\n      setDados = _useState[1];\n\n  var getMyLocation = function getMyLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setDados(function (old) {\n          return _objectSpread({}, old, {\n            coords: {\n              lat: position.coords.latitude,\n              \"long\": position.coords.longitude\n            }\n          });\n        });\n      }, function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  var onStatusChange = function onStatusChange(event) {\n    var value = event.target.value;\n    setDados(function (old) {\n      return _objectSpread({}, old, {\n        status: value\n      });\n    });\n  };\n\n  var save = function save() {\n    return _regeneratorRuntime.async(function save$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"/api/save-status\", dados));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"CreateStatus\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"bem\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), \"Estou bem e sem sintomas\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"gripe\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), \"Estou com sintomas de gripe / resfriado\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"covid\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), \"Estou com sintomas da COVID-19\"), \"Sua posi\\xE7\\xE3o atual: \", JSON.stringify(dados), __jsx(\"button\", {\n    onClick: getMyLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Obter minha localiza\\xE7\\xE3o\"), __jsx(\"button\", {\n    onClick: save,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Salvar meu status\"));\n};\n\nexport var __N_SSP = true;\nexport default CreateStatus;","map":{"version":3,"sources":["/home/rivanildojr/Documentos/fullstack-lab-2020/pages/create-status.js"],"names":["React","useState","useCallback","axios","CreateStatus","status","coords","lat","dados","setDados","getMyLocation","navigator","geolocation","getCurrentPosition","position","old","latitude","longitude","error","console","log","onStatusChange","event","value","target","save","post","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\n\nimport axios from \"axios\";\n\nimport auth0 from \"../lib/auth0\";\n\nconst CreateStatus = () => {\n  const [dados, setDados] = useState({\n    status: \"bem\",\n    coords: {\n      lat: null,\n      long: null,\n    },\n  });\n\n  const getMyLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          setDados((old) => {\n            return {\n              ...old,\n              coords: {\n                lat: position.coords.latitude,\n                long: position.coords.longitude,\n              },\n            };\n          });\n        },\n        function (error) {\n          console.log(error);\n        }\n      );\n    }\n  };\n\n  const onStatusChange = (event) => {\n    const value = event.target.value;\n    setDados((old) => {\n      return {\n        ...old,\n        status: value,\n      };\n    });\n  };\n\n  const save = async () => {\n    await axios.post(\"/api/save-status\", dados);\n  };\n\n  return (\n    <div>\n      <h1>CreateStatus</h1>\n      <label className=\"block\">\n        <input\n          type=\"radio\"\n          name=\"status\"\n          value=\"bem\"\n          onClick={onStatusChange}\n        />\n        Estou bem e sem sintomas\n      </label>\n      <label className=\"block\">\n        <input\n          type=\"radio\"\n          name=\"status\"\n          value=\"gripe\"\n          onClick={onStatusChange}\n        />\n        Estou com sintomas de gripe / resfriado\n      </label>\n      <label className=\"block\">\n        <input\n          type=\"radio\"\n          name=\"status\"\n          value=\"covid\"\n          onClick={onStatusChange}\n        />\n        Estou com sintomas da COVID-19\n      </label>\n      Sua posição atual: {JSON.stringify(dados)}\n      <button onClick={getMyLocation}>Obter minha localização</button>\n      <button onClick={save}>Salvar meu status</button>\n    </div>\n  );\n};\n\nexport default CreateStatus;\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n      },\n    };\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {},\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}