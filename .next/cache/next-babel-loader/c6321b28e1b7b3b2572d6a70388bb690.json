{"ast":null,"code":"var _jsxFileName = \"/home/rivanildojr/Documentos/fullstack-lab-2020/pages/app.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport auth0 from \"../Lib/auth0\";\n\nconst App = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    return {\n      props: {\n        user: session.user\n      }\n    };\n  }\n}","map":{"version":3,"sources":["/home/rivanildojr/Documentos/fullstack-lab-2020/pages/app.js"],"names":["React","auth0","App","props","JSON","stringify","getServerSideProps","req","res","session","getSession","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeF,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFF,CADF;AAMD,CAPD;;AASA,eAAeD,GAAf;AAEA,OAAO,eAAeI,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAgD;AACrD,QAAMC,OAAO,GAAG,MAAMR,KAAK,CAACS,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAIE,OAAJ,EAAa;AACX,WAAO;AACLN,MAAAA,KAAK,EAAE;AACLQ,QAAAA,IAAI,EAAEF,OAAO,CAACE;AADT;AADF,KAAP;AAKD;AACF","sourcesContent":["import React from \"react\";\n\nimport auth0 from \"../Lib/auth0\";\n\nconst App = (props) => {\n  return (\n    <div>\n      <h1>App</h1>\n      <pre>{JSON.stringify(props, null, 2)}</pre>\n    </div>\n  );\n};\n\nexport default App;\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  if (session) {\n    return {\n      props: {\n        user: session.user,\n      },\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}