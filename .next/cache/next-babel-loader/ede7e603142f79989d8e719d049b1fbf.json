{"ast":null,"code":"var _jsxFileName = \"/home/rivanildojr/Documentos/fullstack-lab-2020/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport router from \"next/router\";\nimport auth0 from \"../lib/auth0\";\nimport { db } from \"../lib/db\";\nimport { distance } from \"../lib/geo\";\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push(\"/\");\n    } else if (props.forceCreate) {\n      router.push(\"/create-status\");\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Status pr\\xF3ximos a voc\\xEA:\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, checkin.id === props.user.sub && \"Seu status\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, JSON.stringify(checkin.coords)), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, checkin.distance));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = `${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`;\n    const todayChekin = await db.collection(\"markers\").doc(currentDate).collection(\"checked\").doc(session.user.sub).get();\n    const todaysData = todayChekin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n      const checkins = await db.collection(\"markers\").doc(currentDate).collection(\"checked\").near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude).toFixed(2)\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {},\n      forceCreate\n    }\n  };\n}","map":{"version":3,"sources":["/home/rivanildojr/Documentos/fullstack-lab-2020/pages/app.js"],"names":["React","useEffect","router","auth0","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","user","sub","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todayChekin","collection","doc","get","todaysData","data","near","center","coordinates","radius","checkinsList","docs","forEach","lat","latitude","long","longitude","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport router from \"next/router\";\n\nimport auth0 from \"../lib/auth0\";\nimport { db } from \"../lib/db\";\nimport { distance } from \"../lib/geo\";\n\nconst App = (props) => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push(\"/\");\n    } else if (props.forceCreate) {\n      router.push(\"/create-status\");\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h1>Status próximos a você:</h1>\n      <table>\n        {props.checkins.map((checkin) => {\n          return (\n            <tr>\n              <td>{checkin.id === props.user.sub && \"Seu status\"}</td>\n              <td>{checkin.status}</td>\n              <td>{JSON.stringify(checkin.coords)}</td>\n              <td>{checkin.distance}</td>\n            </tr>\n          );\n        })}\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  if (session) {\n    const today = new Date();\n    const currentDate = `${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`;\n    const todayChekin = await db\n      .collection(\"markers\")\n      .doc(currentDate)\n      .collection(\"checked\")\n      .doc(session.user.sub)\n      .get();\n\n    const todaysData = todayChekin.data();\n    let forceCreate = true;\n    if (todaysData) {\n      forceCreate = false;\n\n      const checkins = await db\n        .collection(\"markers\")\n        .doc(currentDate)\n        .collection(\"checked\")\n        .near({\n          center: todaysData.coordinates,\n          radius: 1000,\n        })\n        .get();\n\n      const checkinsList = [];\n      checkins.docs.forEach((doc) => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude,\n          },\n          distance: distance(\n            todaysData.coordinates.latitude,\n            todaysData.coordinates.longitude,\n            doc.data().coordinates.latitude,\n            doc.data().coordinates.longitude\n          ).toFixed(2),\n        });\n      });\n\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList,\n        },\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate,\n      },\n    };\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {},\n      forceCreate,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}