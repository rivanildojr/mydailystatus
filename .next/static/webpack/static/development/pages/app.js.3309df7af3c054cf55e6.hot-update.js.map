{"version":3,"file":"static/webpack/static/development/pages/app.js.3309df7af3c054cf55e6.hot-update.js","sources":["webpack:///./pages/app.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport router from \"next/router\";\n\nimport auth0 from \"../lib/auth0\";\nimport { db } from \"../lib/db\";\nimport { distance } from \"../lib/geo\";\n\nconst App = (props) => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push(\"/\");\n    } else if (props.forceCreate) {\n      router.push(\"/create-status\");\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h1>Status próximos a você:</h1>\n      <table>\n        {props.checkins.map((checkin) => {\n          return (\n            <tr>\n              <td>{checkin.id === props.user.sub && \"Seu Status\"}</td>\n              <td>{checkin.status}</td>\n              <td>{JSON.stringify(checkin.coords)}</td>\n              <td>{checkin.distance}</td>\n            </tr>\n          );\n        })}\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  if (session) {\n    const today = new Date();\n    const currentDate = `${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`;\n    const todayChekin = await db\n      .collection(\"markers\")\n      .doc(currentDate)\n      .collection(\"checked\")\n      .doc(session.user.sub)\n      .get();\n\n    const todaysData = todayChekin.data();\n    let forceCreate = true;\n    if (todaysData) {\n      forceCreate = false;\n\n      const checkins = await db\n        .collection(\"markers\")\n        .doc(currentDate)\n        .collection(\"checked\")\n        .near({\n          center: todaysData.coordinates,\n          radius: 1000,\n        })\n        .get();\n\n      const checkinsList = [];\n      checkins.docs.forEach((doc) => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude,\n          },\n          distance: distance(\n            todaysData.coordinates.latitude,\n            todaysData.coordinates.longitude,\n            doc.data().coordinates.latitude,\n            doc.data().coordinates.longitude\n          ).toFixed(2),\n        });\n      });\n\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList,\n        },\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate,\n      },\n    };\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {},\n      forceCreate,\n    },\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;;AACA;;;;A","sourceRoot":""}